import java.util.HashSet;

public class BoxingUnboxingExample {
	public static void main(String args[]) {
		//Boxing and Unboxing was introduced in JDK5. Boxing is the process of converting a primitive value into an equivalent object...
		//Direct conversion was not supported. You had to do it like this....
		Integer  ID=new Integer(200); //Converts primitive value into an Integer object. Integer is a wrapper class.
		System.out.println("ID - " + ID);
		//So, you can convert a float also... Float is also a wrapper class like Integer...
		Float  flt=new Float(33.44); //Now fine..
		System.out.println("Float - " + flt);
		//Reverse is also possible. That is from object/class-type to primitive type...
		//This statement had to be written like this...
		float  rate=flt.floatValue(); //Unboxing...
		//Same here also...
		int empid=ID.intValue(); //Unboxing...
		System.out.println("Rate - " + rate); System.out.println("empid - " + empid);
		//So you can use Wrapper class objects in expressions...
		double  amount=ID.intValue() * flt.floatValue() * 2.3 + 3000; //Automatic unboxing...Also called Auto-unboxing
		System.out.println("Amount - " + amount);
		
		//You can also add primitive values to collections...
		HashSet  hset=new HashSet();
		// You cannot add primitive values. Only objects could be added...
		//hset.add(rate); hset.add(empid); 
		//Same stateemnt written like this...
		
		hset.add(ID); hset.add(flt);
		System.out.println("Hset - " + hset);
		//So, why Boxing/Autobxing and Unboxing/Auto-unboxing was introduced ?
		//To enable primitive values to be added to collections. Prior to JDK5.0, collections like HashSet, HashMap etc., did not allow primitive values 
		//to be added..Let us check it. Revert the Java Compiler to any version before JDK 5.0....
		
		//So, to avoid lengthy statements and runtime overhead, Boxing/Autoboxing and Unboxing/Auto-unboxing was introduced...
		//Now, let's select the JDK that is installed on your laptop.
	}
}
